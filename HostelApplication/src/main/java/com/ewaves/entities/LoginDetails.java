package com.ewaves.entities;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * EmpLogin generated by hbm2java
 */
@Entity
@Access(AccessType.PROPERTY)
public class LoginDetails implements java.io.Serializable {

	

	private static final long serialVersionUID = 4228215049635115181L;
	private Long id;
	@JsonIgnore
	private Student student;
	@JsonIgnore
	private HostelDetails hostelDetails;

	private String username;

	private String password;
	private Date insertedOn;

	private Date modifiedOn;

	private Role role;

	public LoginDetails() {
		
		this.hostelDetails=new HostelDetails();
	}

	public LoginDetails(LoginDetails user) {
		this.username = user.getUsername();
		this.password = user.getPassword();

	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@OneToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	public Student getStudent() {
		return this.student;
	}

	
	public void setStudent(Student student) {
		this.student = student;
	}

	@OneToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	public HostelDetails getHostelDetails() {
		return hostelDetails;
	}


	public void setHostelDetails(HostelDetails hostelDetails) {
		this.hostelDetails = hostelDetails;
	}

	@Column(name = "username", length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 200)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "insertedOn", length = 0)
	public Date getInsertedOn() {
		return insertedOn;
	}

	public void setInsertedOn(Date insertedOn) {
		this.insertedOn = insertedOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modifiedOn", length = 0)
	public Date getModifiedOn() {
		return modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	@OneToOne(cascade = CascadeType.MERGE)
	public Role getRole() {
		return role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		LoginDetails other = (LoginDetails) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Transient
	public Long getStudentId() {
		if (this.student != null) {
			return this.student.getId();
		} else {
			return null;
		}

	}
	@Transient
	public Long getHostelId() {
		if (this.hostelDetails != null) {
			return this.hostelDetails.getHostelId();
		} else {
			return null;
		}

	}

}
